{"version":3,"sources":["webpack:///./src/components/MainContact.js","webpack:///./src/pages/contact.js"],"names":["MainContact","props","handleChange","e","fields","state","target","name","value","console","log","setState","sendFields","prepareSendEmailActionCreator","handleSubmit","event","preventDefault","validateForm","errors","formIsValid","match","RegExp","test","render","onSubmit","this","method","className","htmlFor","style","color","fontWeight","uname","onChange","type","id","email","rows","React","Component","ContactPage","timeout","loading","setWrapperRef","bind","componentDidMount","timeoutId","setTimeout","componentWillUnmount","clearTimeout","node","wrapperRef","Layout","location","SmallHeader","nextPage","Footer"],"mappings":"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","file":"component---src-pages-contact-js-2ed90fc81290b81e9ba1.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { prepareSendEmailActionCreator } from '../state/actions'\n\nclass MainContact extends React.Component {\n    constructor(props) {\n      super();\n      this.state = {\n        fields: {},\n        errors: {}\n      }\n    }\n    handleChange = e => {\n      let fields = this.state.fields;\n      fields[e.target.name] = e.target.value;\n      console.log(fields)\n      this.setState({ fields });\n    }\n    sendFields = () => {\n      prepareSendEmailActionCreator(this.state.fields)\n    }\n\n    handleSubmit = event => {\n      event.preventDefault();\n      console.log(this.state.fields);\n      if (this.validateForm()) {\n        this.sendFields()\n      }\n    }\n\n    validateForm = () => {\n      let fields = this.state.fields;\n      let errors = {};\n      let formIsValid = true;\n\n      if (!fields[\"uname\"]) {\n        formIsValid = false;\n        errors[\"uname\"] = \"Please enter your name.\";\n      }\n\n      if (typeof fields[\"uname\"] !== \"undefined\") {\n        if (!fields[\"uname\"].match(/^[a-zA-Z ]*$/)) {\n          formIsValid = false;\n          errors[\"uname\"] = \"Please enter alphabetic characters only.\";\n        }\n      }\n\n      if (!fields[\"message\"]) {\n        formIsValid = false;\n        errors[\"message\"] = \"Please enter a message.\";\n      }\n\n      if (!fields[\"email\"]) {\n        formIsValid = false;\n        errors[\"email\"] = \"Please enter your email.\";\n      }\n\n      if (typeof fields[\"email\"] !== \"undefined\") {\n        //regular expression for email validation\n        var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n        if (!pattern.test(fields[\"email\"])) {\n          formIsValid = false;\n          errors[\"email\"] = \"Please enter a valid email.\";\n        }\n      }\n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n    }\n\n    render() {\n      return (\n        <main>\n        <form name=\"contactForm\" onSubmit={this.handleSubmit} method=\"post\">\n          <div className=\"field half first\">\n            <label htmlFor=\"uname\">Name <span style={{color:'white',fontWeight: 900}}>{this.state.errors.uname}</span></label>\n            <input onChange={this.handleChange} type=\"text\" name=\"uname\" id=\"uname\" />\n          </div>\n          <div className=\"field half\">\n            <label htmlFor=\"email\">Email <span style={{color:'white',fontWeight: 900}}>{this.state.errors.email}</span></label>\n            <input onChange={this.handleChange} type=\"text\" name=\"email\" id=\"email\" />\n          </div>\n          <div className=\"field\">\n            <label htmlFor=\"message\">Message</label>\n            <textarea onChange={this.handleChange} name=\"message\" id=\"message\" rows=\"6\"></textarea>\n          </div>\n          <ul className=\"actions\">\n            <li><input type=\"submit\" name=\"submitter\" value=\"Send Message\" className=\"special\" /></li>\n            <li><input type=\"reset\" name=\"resetter\" value=\"Reset\" /></li>\n          </ul>\n          <input type=\"hidden\" name=\"_text\" value=\"contactReply\" />\n        </form>\n      </main>\n    )\n  }\n}\n\nMainContact.propTypes = {\n  route: PropTypes.object,\n  article: PropTypes.string,\n  articleTimeout: PropTypes.bool,\n  onCloseArticle: PropTypes.func,\n  timeout: PropTypes.bool,\n  setWrapperRef: PropTypes.func.isRequired,\n}\n\nexport default MainContact\n\n// fetch()\n// this.postData(sendTo, fields);\n  // .then(data => {\n      //   navigate('/contactReply');\n      //   console.log(JSON.stringify(data))\n      // }) // JSON-string from `response.json()` call\n      // .catch(error => {\n      //   navigate('/contactOops')\n      //   console.error(error)\n      // });\n\n    // axios.post(sendTo, fields, config)\n    //  .then(res => {\n    //    navigate('/contactReply')\n    //  })\n    //  .catch(oops => {\n    //    navigate('/contactOops')\n  //  })\n","import React from 'react'\nimport Layout from '../components/Layout'\n\nimport SmallHeader from '../components/SmallHeader'\nimport MainContact from '../components/MainContact'\nimport Footer from '../components/Footer'\n\nclass ContactPage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      timeout: false,\n      loading: 'is-loading'\n    }\n    this.setWrapperRef = this.setWrapperRef.bind(this);\n  }\n\n  componentDidMount () {\n    this.timeoutId = setTimeout(() => {\n        this.setState({loading: ''});\n    }, 100);\n  }\n\n  componentWillUnmount () {\n    if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n    }\n  }\n\n  setWrapperRef(node) {\n    this.wrapperRef = node;\n  }\n\n  render() {\n    return (\n      <Layout location={this.props.location}>\n        <div className={`body ${this.state.loading}`}>\n          <div id=\"wrapper\" className=\"page\">\n            <SmallHeader timeout={this.state.timeout} />\n            <MainContact nextPage=\"ContactReply\"\n              timeout={this.state.timeout}\n              setWrapperRef={this.setWrapperRef}\n            />\n            <Footer timeout={this.state.timeout} />\n          </div>\n          <div id=\"bg\"></div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default ContactPage\n"],"sourceRoot":""}